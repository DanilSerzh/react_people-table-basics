{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","slug","classNames","to","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","useState","isLoading","setIsLoading","error","setError","peopleArray","setPeopleArray","useParams","loadPeople","loadedPeopleArray","map","find","parent","useEffect","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2a325611.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n  slug?: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, slug }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={`${person.sex === 'f' && 'has-text-danger'}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother\n          ? (\n            <Link\n              className=\"has-text-danger\"\n              to={`/people/${person.mother.slug}`}\n            >\n              {person.mother.name}\n            </Link>\n          )\n          : `${person.motherName\n            ? `${person.motherName}`\n            : '-'}`}\n      </td>\n\n      <td>\n        {person.father\n          ? (\n            <Link\n              to={`/people/${person.father.slug}`}\n            >\n              {person.father.name}\n            </Link>\n          )\n          : `${person.fatherName\n            ? `${person.fatherName}`\n            : '-'}`}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeopleTable = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [peopleArray, setPeopleArray] = useState<Person[]>([]);\n  const { slug } = useParams();\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeopleArray = await getPeople();\n\n      setPeopleArray(loadedPeopleArray.map(person => ({\n        ...person,\n        mother: loadedPeopleArray.find(parent =>\n          parent.name === person.motherName),\n        father: loadedPeopleArray.find(parent =>\n          parent.name === person.fatherName),\n      })))\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1><div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {peopleArray.length < 1 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {peopleArray.map(person => (\n                <PersonLink\n                  key={person.slug}\n                  person={person}\n                  slug={slug}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n","import classNames from 'classnames';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeopleTable />} />\n            <Route path=\":slug\" element={<PeopleTable />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}